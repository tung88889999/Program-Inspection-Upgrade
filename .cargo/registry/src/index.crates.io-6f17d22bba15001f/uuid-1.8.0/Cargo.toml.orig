[package]
authors = [
    "Ashley Mannix<ashleymannix@live.com.au>",
    "Christopher Armstrong",
    "Dylan DPC<dylan.dpc@gmail.com>",
    "Hunar Roop Kahlon<hunar.roop@gmail.com>"
]
categories = [
    "data-structures",
    "no-std",
    "parser-implementations",
    "wasm"
]
description = "A library to generate and parse UUIDs."
documentation = "https://docs.rs/uuid"
edition = "2018"
include = [
    "src",
    "README.md",
    "LICENSE-APACHE",
    "LICENSE-MIT",
]
keywords = [
    "guid",
    "unique",
    "uuid"
]
license = "Apache-2.0 OR MIT"
homepage = "https://github.com/uuid-rs/uuid"
name = "uuid"
readme = "README.md"
repository = "https://github.com/uuid-rs/uuid"
version = "1.8.0" # remember to update html_root_url in lib.rs
rust-version = "1.60.0"

[package.metadata.docs.rs]
rustc-args = ["--cfg", "uuid_unstable"]
rustdoc-args = ["--cfg", "uuid_unstable"]
targets = ["x86_64-unknown-linux-gnu"]
features = ["serde", "arbitrary", "slog", "borsh", "v1", "v3", "v4", "v5", "v6", "v7", "v8"]

[package.metadata.playground]
features = ["serde", "v1", "v3", "v4", "v5", "v6", "v7", "v8"]

[badges.is-it-maintained-issue-resolution]
repository = "uuid-rs/uuid"

[badges.is-it-maintained-open-issues]
repository = "uuid-rs/uuid"

[badges.maintenance]
status = "actively-developed"

[features]
default = ["std"]
std = []
macro-diagnostics = ["dep:uuid-macro-internal"]

# NOTE: When adding new features, check the `ci.yml` workflow
# and include them where necessary (you can follow along with existing features)
v1 = ["atomic"]
v3 = ["md5"]
v4 = ["rng"]
v5 = ["sha1"]
v6 = ["atomic"]
v7 = ["atomic", "rng"]
v8 = []

js = ["dep:wasm-bindgen", "getrandom?/js"]

rng = ["dep:getrandom"]
fast-rng = ["rng", "dep:rand"]

sha1 = ["dep:sha1_smol"]
md5 = ["dep:md-5"]
atomic = ["dep:atomic"]

borsh = ["dep:borsh", "dep:borsh-derive"]

# Public: Used in trait impls on `Uuid`
[dependencies.bytemuck]
version = "1.14.0"
optional = true
features = ["derive"]

# Public: Used in trait impls on `Uuid`
[dependencies.serde]
default-features = false
optional = true
version = "1.0.56"

# Public: Used in trait impls on `Uuid`
[dependencies.slog]
optional = true
version = "2"

# Public: Used in trait impls on `Uuid`
[dependencies.arbitrary]
optional = true
version = "1.1.3"

# Public (unstable): Used in `zerocopy` derive
# Unstable: also need RUSTFLAGS="--cfg uuid_unstable" to work
# This feature may break between releases, or be removed entirely before
# stabilization.
# See: https://github.com/uuid-rs/uuid/issues/588
[dependencies.zerocopy]
optional = true
version = "0.6"

# Public: Used in trait impls on `Uuid`
[dependencies.borsh]
optional = true
version = "1"
default-features = false

# Private
[dependencies.borsh-derive]
optional = true
version = "1"
default-features = false

# Public
# Usage of `getrandom`'s pluggable randomness for custom targets is documented
# in `uuid`'s library docs
[dependencies.getrandom]
optional = true
version = "0.2"

# Private
[dependencies.rand]
optional = true
version = "0.8"

# Private
[dependencies.md-5]
default-features = false
optional = true
version = "0.10"

# Private
[dependencies.sha1_smol]
default-features = false
optional = true
version = "1"

# Public: Re-exported
[dependencies.uuid-macro-internal]
version = "1.8.0"
path = "macros"
optional = true

# Private
[dependencies.atomic]
default-features = false
optional = true
version = "0.5"

# Private
[target.'cfg(all(target_arch = "wasm32", target_vendor = "unknown", target_os = "unknown"))'.dependencies.wasm-bindgen]
version = "0.2"
optional = true

[dev-dependencies.bincode]
version = "1.0"

[dev-dependencies.serde_derive]
version = "1.0.79"

[dev-dependencies.serde_json]
version = "1.0"

[dev-dependencies.serde_test]
version = "1.0.56"

[target.'cfg(target = "wasm32-unknown-unknown")'.dev-dependencies.wasm-bindgen]
version = "0.2"

[target.'cfg(all(target_arch = "wasm32", target_vendor = "unknown", target_os = "unknown"))'.dev-dependencies.wasm-bindgen-test]
version = "0.3"

[dev-dependencies.trybuild]
version = "1.0.52"

[dev-dependencies.rustversion]
version = "1"

[workspace]
members = [
    "macros",
    "examples",
    "tests/smoke-test",
]
