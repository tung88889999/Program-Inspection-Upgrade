# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.70"
name = "cargo-config2"
version = "0.1.26"
exclude = [
    "/.*",
    "/tools",
]
description = """
Load and resolve Cargo configuration.
"""
readme = "README.md"
keywords = [
    "cargo",
    "config",
]
categories = []
license = "Apache-2.0 OR MIT"
repository = "https://github.com/taiki-e/cargo-config2"

[package.metadata.cargo_check_external_types]
allowed_external_types = ["serde::*"]

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[lib]
doc-scrape-examples = false

[dependencies.serde]
version = "1.0.165"

[dependencies.serde_derive]
version = "1.0.165"

[dependencies.toml_edit]
version = "0.22"
features = [
    "parse",
    "serde",
]
default-features = false

[dev-dependencies.anyhow]
version = "1"

[dev-dependencies.build-context]
version = "0.1"

[dev-dependencies.clap]
version = "4"
features = [
    "std",
    "derive",
]
default-features = false

[dev-dependencies.duct]
version = "0.13"

[dev-dependencies.fs-err]
version = "2"

[dev-dependencies.lexopt]
version = "0.3"

[dev-dependencies.rustversion]
version = "1"

[dev-dependencies.serde_json]
version = "1"

[dev-dependencies.shell-escape]
version = "0.1"

[dev-dependencies.static_assertions]
version = "1"

[dev-dependencies.tempfile]
version = "3"

[dev-dependencies.toml]
version = "0.8"

[target."cfg(windows)".dependencies.home]
version = "0.5"

[lints.clippy]
all = "warn"
as_ptr_cast_mut = "warn"
default_union_representation = "warn"
inline_asm_x86_att_syntax = "warn"
pedantic = "warn"
trailing_empty_array = "warn"
transmute_undefined_repr = "warn"
undocumented_unsafe_blocks = "warn"

[lints.clippy.bool_assert_comparison]
level = "allow"
priority = 1

[lints.clippy.borrow_as_ptr]
level = "allow"
priority = 1

[lints.clippy.declare_interior_mutable_const]
level = "allow"
priority = 1

[lints.clippy.doc_markdown]
level = "allow"
priority = 1

[lints.clippy.float_cmp]
level = "allow"
priority = 1

[lints.clippy.manual_assert]
level = "allow"
priority = 1

[lints.clippy.manual_range_contains]
level = "allow"
priority = 1

[lints.clippy.missing_errors_doc]
level = "allow"
priority = 1

[lints.clippy.module_name_repetitions]
level = "allow"
priority = 1

[lints.clippy.nonminimal_bool]
level = "allow"
priority = 1

[lints.clippy.similar_names]
level = "allow"
priority = 1

[lints.clippy.single_match]
level = "allow"
priority = 1

[lints.clippy.single_match_else]
level = "allow"
priority = 1

[lints.clippy.struct_excessive_bools]
level = "allow"
priority = 1

[lints.clippy.struct_field_names]
level = "allow"
priority = 1

[lints.clippy.too_many_arguments]
level = "allow"
priority = 1

[lints.clippy.too_many_lines]
level = "allow"
priority = 1

[lints.clippy.type_complexity]
level = "allow"
priority = 1

[lints.rust]
improper_ctypes = "warn"
improper_ctypes_definitions = "warn"
non_ascii_idents = "warn"
rust_2018_idioms = "warn"
single_use_lifetimes = "warn"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "warn"
